from telethon.sync import TelegramClient
import asyncio
from datetime import datetime, timedelta, timezone


client = TelegramClient(phone, api_id, api_hash)

async def main():
    await client.start()
    me = await client.get_me()
    dialogs = await client.get_dialogs()

    # –°–æ–∑–¥–∞–µ–º datetime —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω–æ–π UTC
    one_day_ago = datetime.now(timezone.utc) - timedelta(days=1)

    messages_dict = {}

    my_groups = ('–ê–Ω–≥–ª–æ—è–∑—ã—á–Ω–æ–µ SEO', '–ù–∏–∫–æ–ª–∞–π –ö–æ–¥–∏–π: SEO, PBN, –ì–ï–ú–ë–õ–ê, –ú–´–°–õ–ò', 'Searchengines - –Ω–æ–≤–æ—Å—Ç–∏ seo, –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Å–∞–π—Ç–æ–≤, –∫–æ–Ω—Ç–µ–∫—Å—Ç, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, digital',
                 '–õ–∞–π—Ñ—Ö–∞–∫–∏ –ø–æ SEO | –ö–∏—Ä–∏–ª–ª –†–∞–º–∏—Ä–∞—Å', 'SEO –¥–ª—è —Ä–æ–±–æ—Ç–æ–≤', 'DrMax SEO', 'SEO –±–µ–∑ –≤–æ–¥—ã', '–ê–ª–∞–∏—á–™ –ø—Ä–æ SEO, –±–∏–∑–Ω–µ—Å –∏ ‚Ä¶', 'SEO –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–µ')
    my_groups_ua = ('SEO BAZA', 'Python –¥–ª—è SEO üá∫üá¶', 'SEO inside', 'SEObox')

    for dialog in dialogs:
        if dialog.name == 'SEO BAZA':
            entity = await client.get_entity(dialog)
            async for message in client.iter_messages(entity):
                # –ü—Ä–∏–≤–æ–¥–∏–º –¥–∞—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è –∫ UTC –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                message_date = message.date.replace(tzinfo=timezone.utc)
                if message_date >= one_day_ago:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é
                    if hasattr(entity, 'username') and entity.username:
                        message_link = f"https://t.me/{entity.username}/{message.id}"
                    else:
                        message_link = f"https://t.me/c/{entity.id}/{message.id}"
                    messages_dict[message_link] = message.text
                else:
                    break  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ä—à–µ –æ–¥–Ω–æ–≥–æ –¥–Ω—è, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                await asyncio.sleep(1)
    await client.disconnect()
    return messages_dict

if __name__ == "__main__":
    messages_dict = asyncio.run(main())
    print(messages_dict)
